// SpeedrunTracker/Generated/SupportedLanguages.tt
<#@ template language="C#" hostspecific="true" #>
<#@ output extension=".g.cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>

<#
    // Adjust the path as needed for your project structure
    string localizationDir = Path.Combine(Host.ResolvePath(".."), "Resources", "Localization");
    var files = Directory.Exists(localizationDir)
        ? Directory.GetFiles(localizationDir, "AppStrings*.resx")
        : new string[0];
    var cultures = files
        .Select(f => {
            var name = Path.GetFileNameWithoutExtension(f);
            return name == "AppStrings"
                ? "en"
                : (name.StartsWith("AppStrings.") ? name.Substring(11) : null);
        })
        .Where(c => !string.IsNullOrEmpty(c))
        .Distinct()
        .OrderBy(c => c)
        .ToArray();
#>
namespace SpeedrunTracker.Generated
{
    public static class SupportedLanguages
    {
        public static readonly string[] All = new string[]
        {
<#      foreach(var c in cultures) { #>
            "<#= c #>",
<#      } #>
        };
    }
}